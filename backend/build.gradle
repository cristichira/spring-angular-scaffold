buildscript {
    ext {
        springBootVersion = "2.5.5"
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects { proj ->
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'io.spring.dependency-management'

    group = rootProject.group
    version = rootProject.version

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
        }

        dependencies {
            dependency('mysql:mysql-connector-java:8.0.26')
            dependency("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
            dependency('org.mapstruct:mapstruct:1.4.1.Final')
            dependency('org.mapstruct:mapstruct-processor:1.4.1.Final')
            dependency('org.springdoc:springdoc-openapi-ui:1.5.12')
            dependency('org.springdoc:springdoc-openapi-data-rest:1.5.12')
            dependency('io.jsonwebtoken:jjwt:0.9.1')
            dependency('org.apache.poi:poi:5.0.0')
            dependency('org.apache.poi:poi-ooxml:5.0.0')
            dependency('com.amazonaws:aws-java-sdk-core:1.12.93')
            dependency('com.amazonaws:aws-java-sdk-s3:1.12.93')
            dependency('net.coobird:thumbnailator:0.4.14')
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.apache.commons:commons-lang3'
        implementation 'org.springdoc:springdoc-openapi-data-rest'
        implementation 'org.springdoc:springdoc-openapi-ui'
        implementation 'org.mapstruct:mapstruct-processor'
        implementation 'org.mapstruct:mapstruct'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        annotationProcessor 'org.mapstruct:mapstruct-processor'

        runtimeOnly 'mysql:mysql-connector-java'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs = [
                '-Amapstruct.defaultComponentModel=spring',
                '-Amapstruct.unmappedTargetPolicy=ERROR'
        ]

        options.encoding = 'UTF-8'
    }

    def projectName = proj.name
    if (projectName.endsWith('-server')) {
        apply plugin: 'org.springframework.boot'
    }
}
